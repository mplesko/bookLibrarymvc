<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- The configuration of the bookLibraryService application. -->
	
	<context:annotation-config/>

	<!-- Weaves in transactional advice around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Manages the BookLibrary app -->
	<bean id="bookLibraryService" class="com.logansrings.booklibrary.service.BookLibraryServiceImpl">
	</bean>

	<!-- Manages the db access for Authors -->
	<bean id="authorDao" class="com.logansrings.booklibrary.dao.AuthorDaoImpl">
		<!-- <constructor-arg ref="sessionFactory" /> -->
	</bean>

	<!-- A Hibernate SessionFactory for mapping from object to relation tables -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="annotatedClasses">
			<list>
				<value>com.logansrings.booklibrary.model.Author</value>
			</list>
		</property>
	</bean>

	<!-- Creates an in-memory "rewards" database populated with test data for fast testing -->
	<jdbc:embedded-database id="dataSource">
		<jdbc:script location="classpath:testdb/schema.sql"/>
		<jdbc:script location="classpath:testdb/test-data.sql"/>
	</jdbc:embedded-database>
	 
	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
		
	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
</beans>