<http auto-config="true">
       <!-- Don't set any role restrictions on login.jsp -->
       <intercept-url pattern="/login.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" />
       <!-- Restrict access to ALL other pages -->
       <intercept-url pattern="/**" access="ROLE_USER" />
       <!-- Set the login page and what to do if login fails -->
       <form-login login-page="/login.jsp"
authentication-failure-url="/login.jsp?login_error=1" />
</http>

Access Denied: This is the page the user will see if they are denied
access to the site due to lack of authorization (i.e. tried to hit a
page that they didn’t have access to hit, even though they were
authenticated properly). This is configured as follows:

<http ... access-denied-page="/accessDenied.jsp"> ... </http>

Default Target URL: This is where the user will be redirected upon
successful login. This can (and probably should) be a page located
under Spring control. Configured as follows:

<http ... > ... <form-login ... default-target-url="/home.do"/> ... </http>

Logout URL: The page where the user is redirected upon a successful
logout. This can be a page located under Spring control too (provided
that it allows anonymous access):

<http ... > ... <logout logout-success-url="/home.do"/> ... </http>

Login Failure URL: Where the user will be sent if there was an
authentication failure. Typically this is back to the login form, with
a URL parameter, such as:

?1 <http ... > ... <form-login ...
authentication-failure-url="/login.jsp?login_error=1"/> ... </http>
<logout invalidate-session="true" logout-success-url="/page/welcome" />
   <remember-me />
   
   

CREATE TABLE users ( username character varying(50) NOT NULL,
"password" character varying(50) NOT NULL, enabled boolean NOT NULL,
CONSTRAINT users_pkey PRIMARY KEY (username) );
CREATE TABLE authorities ( username character varying(50) NOT NULL,
authority character varying(50) NOT NULL, CONSTRAINT
fk_authorities_users FOREIGN KEY (username) REFERENCES users
(username) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION );
CREATE UNIQUE INDEX ix_auth_username ON authorities USING btree
(username, authority);


create table users(
     username varchar_ignorecase(50) not null primary key,
     password varchar_ignorecase(50) not null,
     enabled boolean not null);

 create table authorities (
     username varchar_ignorecase(50) not null,
     authority varchar_ignorecase(50) not null,
     constraint fk_authorities_users foreign key(username) references
users(username));
     create unique index ix_auth_username on authorities (username,authority);